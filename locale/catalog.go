// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package locale

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en_US": &dictionary{index: en_USIndex, data: en_USData},
		"ja_JP": &dictionary{index: ja_JPIndex, data: ja_JPData},
	}
	fallback := language.MustParse("en-US")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"...and so you return.":                                       27,
	"Archetype is a collection of attributes and traits":          7,
	"Brains determines spell damage and ability to by-pass traps": 10,
	"Confirm deletion":                                            2,
	"Confirm your password to register.":                          29,
	"Create a new hero or select a previous one.":                 6,
	"Funk determines luck and area of effect bonuses":             11,
	"Swole determines damage and health":                          8,
	"Traits are unique modifiers to an archetype":                 12,
	"Zooms determines speed and dodge":                            9,
	"archetype must be selected":                                  14,
	"back":                                                        20,
	"character name":                                              3,
	"confirm":                                                     17,
	"create":                                                      4,
	"delete":                                                      1,
	"join":                                                        0,
	"logged in!":                                                  28,
	"logging in...":                                               25,
	"login":                                                       18,
	"login. you will be prompted to register if username does not exist.": 21,
	"logout":                     5,
	"name must not be empty":     13,
	"password":                   16,
	"password must not be empty": 23,
	"passwords must match":       24,
	"register":                   19,
	"registering...":             26,
	"username":                   15,
	"username must not be empty": 22,
	"world name":                 30,
}

var en_USIndex = []uint32{ // 32 elements
	0x00000000, 0x00000005, 0x0000000c, 0x0000001d,
	0x0000002c, 0x00000033, 0x0000003a, 0x00000066,
	0x00000099, 0x000000bc, 0x000000dd, 0x00000119,
	0x00000149, 0x00000175, 0x0000018c, 0x000001a7,
	0x000001b0, 0x000001b9, 0x000001c1, 0x000001c7,
	0x000001d0, 0x000001d5, 0x00000219, 0x00000234,
	0x0000024f, 0x00000264, 0x00000272, 0x00000281,
	0x00000297, 0x000002a2, 0x000002c5, 0x000002d0,
} // Size: 152 bytes

const en_USData string = "" + // Size: 720 bytes
	"\x02join\x02delete\x02Confirm deletion\x02character name\x02create\x02lo" +
	"gout\x02Create a new hero or select a previous one.\x02Archetype is a co" +
	"llection of attributes and traits\x02Swole determines damage and health" +
	"\x02Zooms determines speed and dodge\x02Brains determines spell damage a" +
	"nd ability to by-pass traps\x02Funk determines luck and area of effect b" +
	"onuses\x02Traits are unique modifiers to an archetype\x02name must not b" +
	"e empty\x02archetype must be selected\x02username\x02password\x02confirm" +
	"\x02login\x02register\x02back\x02login. you will be prompted to register" +
	" if username does not exist.\x02username must not be empty\x02password m" +
	"ust not be empty\x02passwords must match\x02logging in...\x02registering" +
	"...\x02...and so you return.\x02logged in!\x02Confirm your password to r" +
	"egister.\x02world name"

var ja_JPIndex = []uint32{ // 32 elements
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
} // Size: 152 bytes

const ja_JPData string = ""

// Total table size 1024 bytes (1KiB); checksum: DDCCCDA2
